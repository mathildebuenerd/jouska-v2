{"version":3,"sources":["../../src/pages/dashboard/dashboard.ts","../../src/pages/messages/messages.ts","../../src/pages/settings/settings.ts","../../src/pages/writing/writing.ts","../../src/services/writingAnalysis.service.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/stats/stats.ts","../../src/pages/stats/single-contact-stats/single-contact-stats.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../util (ignored)","webpack:///util (ignored)?8906","../../streams (ignored)","../../extend-node (ignored)","../../node_modules/encoding/lib","../../src/app/app.component.ts","../../src/services/textAnalysis.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA0C;AACe;AAEzD;;;;;GAKG;AAOH;IAEE,uBAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IACtE,CAAC;IAED,sCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC9C,CAAC;IAPU,aAAa;QAJzB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;sBAGsE;OAF3D,aAAa,CASzB;IAAD,CAAC;AAAA;SATY,aAAa,e;;;;;;;;;;;;;;;;;;;;ACfgB;AACe;AAEzD;;;;;GAKG;AAOH;IAEE,sBAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IACtE,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IAPU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;qBAGsE;OAF3D,YAAY,CASxB;IAAD,CAAC;AAAA;SATY,YAAY,e;;;;;;;;;;;;;;;;;;;;ACfiB;AACe;AAEzD;;;;;GAKG;AAOH;IAEE,sBAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IAEtE,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IARU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;qBAGsE;OAF3D,YAAY,CAUxB;IAAD,CAAC;AAAA;SAVY,YAAY,e;;;;;;;;;;;;;;;;;;;;;ACfiB;AACe;AAEuB;AAEhF;;;;;GAKG;AAOH;IAGE,qBAAmB,OAAsB,EACtB,SAAoB,EACnB,eAAuC;QAFxC,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,oBAAe,GAAf,eAAe,CAAwB;QAEzD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;IAEvC,CAAC;IAED,oCAAc,GAAd;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAE1C,mDAAmD;QACnD,IAAM,QAAQ,GAAgB,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC;QAE9E,iEAAiE;QACjE,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACjC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAI,CAAC,YAAY,CAAC;QACrD,CAAC,CAAC;IACJ,CAAC;IArBU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;6EAIyC;YACX,iGAAS;YACF,QAAsB;OALhD,WAAW,CAuBvB;IAAD,CAAC;AAAA;SAvBY,WAAW,e;;;;;;;;;;;;;;;;;;;;ACjBiB;AACoB;AAE7D,gFAAgF;AAEhF;IAME,gCAAoB,mBAAwC;QAA5D,iBAsBC;QAtBmB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAwBrD,kBAAa,GAAE,UAAC,WAAmB,EAAE,KAAa;YACvD,4CAA4C;YAC5C,IAAI,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,MAAI,WAAW,WAAQ,CAAC,CAAC;YAC3E,4CAA4C;YAC5C,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,+CAA6C,KAAK,SAAM,CAAC;QAC3F,CAAC,CAAC;QAEK,aAAQ,GAAE,UAAC,MAAc,EAAE,KAAa;YAC7C,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,KAAK,GAAG,CAAC,CAAC;YACZ,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,GAAG,CAAC,CAAC,CAAC;YACb,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAG,IAAI,aAAM,CAAC,GAAG,CAAC,KAAK,KAAK,EAArB,CAAqB,CAAC,CAAC;QAChE,CAAC,CAAC;QAkBF,iBAAY,GAAE,UAAC,QAAa,EAAE,IAAY;YACxC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAGhE,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAM,aAAa,GAAG,CAAC,aAAa,EAAE,mBAAmB,EAAE,UAAU,CAAC,CAAC;YAEvE,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,aAAa,CAAC,CAAC,CAAC;gBAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBACpC,KAAK,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,CAAC,CAAC,IAAM,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;wBAC9B,8DAA8D;wBAC9D,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;oBACrC,CAAC;gBACH,CAAC;gBACD,8DAA8D;YAChE,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,KAAK,GAAG,QAAQ,CAAC;YACnB,CAAC;YAED,iDAAiD;YACjD,IAAI,QAAQ,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC5C,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAEnC,yCAAyC;YACzC,0DAA0D;YAC1D,IAAI;QACN,CAAC,CAAC;QAEK,gBAAW,GAAC,UAAC,QAAgB,EAAE,QAAuB;YAAvB,0CAAuB;YAE3D,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YAEpC,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC3B,IAAM,QAAQ,GAAG,KAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAChF,2CAA2C;gBAC3C,IAAM,OAAO,GAAG,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBACjF,6CAA6C;gBAE7C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gBAElC,sBAAsB;gBACtB,4DAA4D;gBAC5D,kDAAkD;gBAClD,IAAM,cAAc,GAAG,IAAI,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACxD,oCAAoC;gBACpC,+BAA+B;gBAC/B,IAAM,kBAAkB,GAAG,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,6GAA6G;gBACxK,kDAAkD;gBAClD,IAAM,cAAc,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBAElD,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;gBAEvC,mFAAmF;gBACnF,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;oBACvC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;QAEH,CAAC,CAAC;QAEF,sBAAiB,GAAG,UAAC,IAAY,EAAE,QAAgB;YAEjD,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,YAAY,GAAG;gBACjB,OAAO,EAAE;oBACP,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,YAAY,EAAE;oBACZ,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,kBAAkB,EAAE;oBAClB,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,aAAa,EAAE;oBACb,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;aACF,CAAC;YACF,IAAI,eAAe,GAAG;gBACpB,UAAU,EAAE;oBACV,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,mBAAmB,EAAE;oBACnB,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,cAAc,EAAE;oBACd,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,eAAe,EAAE;oBACf,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;gBACD,aAAa,EAAE;oBACb,OAAO,EAAE,CAAC;oBACV,eAAe,EAAE,EAAE;oBACnB,eAAe,EAAE,EAAE;iBACpB;aACF,CAAC;YAEF,EAAE,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBACzB,QAAQ,GAAG,YAAY,CAAC;gBACxB,GAAG,CAAC,CAAC,IAAM,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;oBAC7B,wDAAwD;oBACxD,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBAC3B,GAAG,CAAC,CAAC,IAAM,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACnC,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,0CAA0C;4BAClF,qEAAqE;4BACrE,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8DAA8D;4BAC1G,uJAAuJ;4BACvJ,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gCAClB,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;gCACxB,QAAQ,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC5C,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;gCACxB,QAAQ,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC5C,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC9B,QAAQ,GAAG,eAAe,CAAC;gBAC3B,GAAG,CAAC,CAAC,IAAM,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;oBAC7B,0CAA0C;oBAC1C,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;wBACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACxD,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,0CAA0C;4BACvF,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8DAA8D;4BAC/G,uJAAuJ;4BACvJ,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gCAClB,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;gCACxB,QAAQ,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC5C,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;gCACxB,QAAQ,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC5C,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YAID,qCAAqC;YAErC,uFAAuF;YACvF,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC,CAAC;QAYF,yBAAoB,GAAE,UAAC,KAAe;YACpC,yBAAyB;YACzB,sBAAsB;YACtB,IAAM,QAAQ,GAAgB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACpE,GAAG,CAAC,CAAC,IAAM,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;gBACzB,IAAI,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;gBACzD,8BAA8B;gBAC9B,2BAA2B;gBAC3B,0DAA0D;gBAC1D,IAAM,SAAS,GAAG,IAAI,MAAM,CAAC,KAAG,KAAK,CAAC,IAAI,CAAG,EAAE,IAAI,CAAC,CAAC;gBACrD,QAAQ,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC7E,CAAC;YAED,IAAM,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,CAAC,IAAM,UAAU,IAAI,cAAc,CAAC,CAAC,CAAC;oBACxC,IAAI,gBAAgB,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;oBAC3E,GAAG,CAAC,CAAC,IAAM,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;wBACtC,IAAM,OAAO,GAAgB,gBAAgB,CAAC,MAAM,CAAC,CAAC;wBACtD,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,CAAC,qCAAoC;wBACpF,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,gBAAc,WAAa,CAAC;oBAC5D,CAAC;gBACH,CAAC;YACH,CAAC;YAED,mDAAmD;YACnD,oFAAoF;YACpF,mEAAmE;YACnE,yEAAyE;YACzE,6BAA6B;YAE7B,+FAA+F;QAEjG,CAAC,CAAC;QAEF,4BAAuB,GAAE,UAAC,sBAAsB;YAC9C,IAAI,KAAK,EAAC,SAAS,CAAC;YACpB,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,iEAAgE;YAC/F,KAAK,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC,2DAA0D;YAC3G,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,yFAAwF;YAC9G,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC,4DAA2D;YAC7F,SAAS,CAAC,eAAe,EAAE,CAAC,qCAAoC;YAChE,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,6DAA4D;QACxF,CAAC,CAAC;QAjRA,IAAI,CAAC,MAAM,GAAG;YACZ,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;YACZ,QAAQ,EAAE,CAAC,CAAC;SACb,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,+OAA+O;QAC9Q,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC;IAkBM,iDAAgB,GAAvB,UAAwB,KAAa;QACnC,mDAAmD;QACnD,2EAA2E;QAC3E,IAAI,KAAK,GAAG,KAAK,GAAC,CAAC,CAAC;QAEpB,sEAAsE;QACtE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,KAAK,GAAG,CAAC,CAAC;QACZ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK,GAAG,CAAC,CAAC,CAAC;QACb,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IAEf,CAAC;IAuKD,0CAAS,GAAT,UAAU,IAAY,EAAE,SAAiB;QAEvC,IAAI,GAAG,GAAG,mBAAgB,SAAS,QAAI,CAAC;QACxC,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC;YAClD,GAAG,IAAI,WAAS,IAAI,CAAC,MAAM,CAAC,YAAS,CAAC,CAAC,uFAAuF;QAChI,CAAC;QACD,GAAG,IAAI,SAAS,CAAC;QACjB,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IA3OU,sBAAsB;QADlC,yEAAU,EAAE;yCAO8B,kFAAmB;OANjD,sBAAsB,CAqTlC;IAAD,6BAAC;CAAA;AArTkC;;;;;;;;ACLnC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;AC9B0C;AACC;AACU;AACH;AACH;AACG;AASlD;IALA;QAME,kBAAa,GAAG,2EAAa,CAAC;QAC9B,iBAAY,GAAG,wEAAY,CAAC;QAC5B,gBAAW,GAAG,qEAAW,CAAC;QAC1B,cAAS,GAAG,+DAAS,CAAC;QACtB,iBAAY,GAAG,wEAAY,CAAC;IAC9B,CAAC;IANY,QAAQ;QALpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;UACG;SACzB,CAAC;OAEW,QAAQ,CAMpB;IAAD,CAAC;AAAA;SANY,QAAQ,e;;;;;;;;;;;;;;;;;;;;;;ACd2B;AACO;AAC8B;AACb;AAMxE;IA6BE,mBAAoB,OAAsB,EACtB,mBAAwC;QADxC,YAAO,GAAP,OAAO,CAAe;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QA5B5D,gBAAW,GAAG;YACZ;gBACE,IAAI,EAAE,SAAS;gBACf,WAAW,EAAE;oBACX,YAAY;oBACZ,QAAQ;oBACR,4BAA4B;iBAC7B;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE;oBACX,YAAY;oBACZ,QAAQ;oBACR,sBAAsB;iBACvB;aACF;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,WAAW,EAAE;oBACX,YAAY;oBACZ,QAAQ;oBACR,mBAAmB;iBACpB;aACF;SACF,CAAC;QAKA,IAAI,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;QACzE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,sCAAkB,GAAlB,UAAmB,YAAmD;QACpE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,0GAAsB,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,CAAC,CAAC;IAC1E,CAAC;IAED,4BAAQ,GAAR;IAEA,CAAC;IA1CU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;yGA8B0C;YACD,MAAmB;OA9BjD,SAAS,CA2CrB;IAAD,CAAC;AAAA;SA3CY,SAAS,e;;;;;;;;;;;;;;;;;;;;ACT0B;AACN;AAE1C;;;;;GAKG;AAMH;IAOE,gCAAmB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IACvC,CAAC;IACD,yCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IACzD,CAAC;IAXU,sBAAsB;QAJlC,wEAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;WACG;SACzC,CAAC;+BAQuC;OAP5B,sBAAsB,CAalC;IAAD,CAAC;AAAA;SAbY,sBAAsB,iB;;;;;;;;ACdnC;AAAA;AAAA;AAA2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AAEb;AACS;AACiD;AACxC;AACZ;AACU;AACH;AACM;AAEY;AACI;AA4C3E;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA1CrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kFAAa;gBACb,+EAAY;gBACZ,4EAAW;gBACX,qEAAS;gBACT,sHAAsB;gBACtB,8EAAY;gBACZ,kEAAQ;aACT;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE;wBACL,EAAE,YAAY,EAAE,yDAAyD,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBAC7J,EAAE,YAAY,EAAE,sDAAsD,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACxJ,EAAE,YAAY,EAAE,sDAAsD,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBACxJ,EAAE,YAAY,EAAE,mDAAmD,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;qBACpJ;iBACF,CAAC;aACC;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kFAAa;gBACb,+EAAY;gBACZ,4EAAW;gBACX,qEAAS;gBACT,sHAAsB;gBACtB,8EAAY;gBACZ,kEAAQ;aACT;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,4FAAmB;gBACnB,kGAAsB;gBACtB,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;aACrD;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;AC5DtB,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,6B;;;;;;;;;;;;;;;;;;;;;;;ACN0C;AACD;AACY;AACM;AAEb;AAC9C,kDAAkD;AAKlD;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B;;;;;;;;ACXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACZ;AACJ;AACY;AACJ;AACS;AACZ;AAGxC;IAEE;QAwFA,uBAAkB,GAAC,UAAC,QAAgB;YAClC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACjC,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,uCAAU,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,IAAI,EAAC,CAAC;qBAC7B,IAAI,CAAC,wBAAc;oBAClB,oDAAoD;oBACpD,IAAI,GAAG,cAAc,CAAC;oBACtB,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC9C,CAAC;oBACD,OAAO,CAAC,GAAG,CAAC,WAAS,IAAM,CAAC,CAAC;oBAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK,IAAI,aAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;gBACnC,eAAe;YACjB,CAAC,CAAC,CAAC;QACL,CAAC;IAtGD,CAAC;IAEa,kCAAc,GAA5B,UAA6B,QAAQ;QAEnC,0EAA0E;QAC1E,4EAA4E;QAC5E,2EAA2E;QAC3E,kBAAkB;QAClB,gBAAgB;QAChB,iHAAiH;QACjH,2FAA2F;QAC3F,wFAAwF;QAExF,IAAI,eAAe,GAAG,QAAQ,CAAC;QAC/B,IAAM,UAAU,GAAG,IAAI,MAAM,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC,+DAA+D;QAE5H,IAAI,KAAK,CAAC,CAAC,mEAAmE;QAC9E,IAAI,YAAY,GAAG,EAAE,CAAC,CAAC,yCAAyC;QAChE,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;YAC3D,IAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1D,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC/B,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,QAAQ,CAAC,CAAC,wCAAwC;QAC3D,CAAC;IAEH,CAAC;IAEM,qDAAuB,GAA9B;QACE,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1D,GAAG,CAAC,CAAC,IAAM,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAM,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACpC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;oBACpB,GAAG,CAAC,CAAC,IAAM,SAAS,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC/C,IAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACpE,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC5D,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;oBACrG,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAEM,+CAAiB,GAAxB,UAAyB,WAAmB,EAAE,QAAuB,EAAE,eAAqC;QAA9D,0CAAuB;QAAE,+DAAqC;QAE1G,IAAM,OAAO,GAAG,mBAAmB,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEhE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,QAAQ,GAAG,EAAE,CAAC,CAAC,+CAA+C;YAClE,GAAG,CAAC,CAAC,IAAM,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;gBAC7B,QAAQ,CAAC,IAAI,CAAC,mDAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC;YACvE,CAAC;YACD,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,mDAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QACvD,CAAC;IAIH,CAAC;IAEM,+CAAiB,GAAxB,UAAyB,WAAmB,EAAE,IAAoC;QAApC,gCAAgB,QAAQ,EAAE,SAAS,EAAC;QAChF,MAAM,CAAC,uCAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,iDAAmB,GAA1B,UAA2B,WAAmB,EAAE,IAAoC;QAApC,gCAAgB,QAAQ,EAAE,SAAS,EAAC;QAClF,MAAM,CAAC,qCAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,8CAAgB,GAAvB,UAAwB,WAAmB,EAAE,QAAuB;QAAvB,0CAAuB;QAClE,MAAM,CAAC,2CAAa,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAEM,2DAA6B,GAApC,UAAqC,WAAmB,EAAE,QAAuB;QAAvB,0CAAuB;QAC/E,MAAM,CAAC,yCAAW,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC;IAEM,iDAAmB,GAA1B,UAA2B,WAAmB,EAAE,QAAuB;QAAvB,0CAAuB;QACrE,MAAM,CAAC,kDAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,8CAA8C;IAC3F,CAAC;IAmBH,0BAAC;AAAD,CAAC","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the DashboardPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-dashboard',\n  templateUrl: 'dashboard.html',\n})\nexport class DashboardPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad DashboardPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/dashboard.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the MessagesPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-messages',\n  templateUrl: 'messages.html',\n})\nexport class MessagesPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad MessagesPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messages/messages.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the SettingsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html',\n})\nexport class SettingsPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SettingsPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TextAnalysisService } from \"../../services/textAnalysis.service\";\nimport { WritingAnalysisService } from \"../../services/writingAnalysis.service\";\n\n/**\n * Generated class for the WritingPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-writing',\n  templateUrl: 'writing.html',\n})\nexport class WritingPage {\n  messageInput: string;\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              private writingAnalysis: WritingAnalysisService) {\n\n    console.log(\"construct Writing page\")\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad WritingPage');\n\n    // We get the textarea where the message is written\n    const textArea = <HTMLElement>document.querySelector('#message-area textarea')\n\n    // As keypress doesn't work with a android keyboard, we use keyup\n    textArea.addEventListener(\"keyup\", () => {\n      this.writingAnalysis.analyzeText(this.messageInput)\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/writing/writing.ts","import {Injectable} from \"@angular/core\";\nimport { TextAnalysisService } from \"./textAnalysis.service\";\n\n// As this service also use the TextAnalysis service, we have to use @Injectable\n@Injectable()\nexport class WritingAnalysisService {\n\n  colors: object;\n  tempSentences: Array<string>;\n  private messageInput: string;\n\n  constructor(private textAnalysisService: TextAnalysisService) {\n    this.colors = {\n      \"a5f31b\": 8,\n      \"a4ed2b\": 7,\n      \"a2e739\": 6,\n      \"a1dc52\": 5,\n      \"a1d16b\": 4,\n      \"a1c087\": 3,\n      \"a1b595\": 2,\n      \"a1a69f\": 1,\n      \"a39ba1\": 0,\n      \"ae849b\": -1,\n      \"b57794\": -2,\n      \"c26185\": -3,\n      \"cf4c74\": -4,\n      \"db3863\": -5,\n      \"e82551\": -6,\n      \"f21542\": -7,\n      \"fb0736\": -8\n    };\n    this.tempSentences = [\"\", \"\"]; // on utilise cette variable pour optimiser l'usage de le fonction de traduction. On stocke la dernière phrase traduite dedans, et on checke ensuite chaque fois qu'une touche est pressée pour comparer et voir s'il y a un mot supplémentaire\n    console.log(\"constructor WritingAnalysisService\")\n  }\n\n  public changeSidebar= (barSelector: string, score: number) => {\n    // console.log(`bar selector`, barSelector);\n    let sidebar = <HTMLElement>document.querySelector(`#${barSelector} .fill`);\n    // console.log(`barselector:`, barSelector);\n    sidebar.style.backgroundImage = `url(img/interface-components/jauges/jauge_${score}.png`;\n  };\n\n  public getColor= (object: object, value: number): string => {\n    if (value > 8) {\n      value = 8;\n    } else if (value < -8) {\n      value = -8;\n    }\n    return Object.keys(object).find(key => object[key] === value);\n  };\n\n  public getSidebarNumber(score: number) {\n    // le score est usuellement un nombre entre -8 et 8\n    // comme les jauges sont numérotées de 0 à 16, on commence en soustrayant 8\n    let value = score+8;\n\n    // ensuite, si les valeurs sont trop hautes ou trop basses, on égalise\n    if (score > 8) {\n      value = 8;\n    } else if (score < -8) {\n      value = -8;\n    }\n\n    return value;\n\n  }\n\n  showFeedback= (analysis: any, type: string) => {\n    console.log(`showFeedback`, `analysis`, analysis, `type`, type);\n\n\n    let score = 0;\n    const otherAnalysis = [\"psychopathy\", \"conscientiousness\", \"openness\"];\n\n    if (type === \"polarity\" || type === \"selfishness\") {\n      if (analysis['score'] !== undefined) {\n        score += analysis['score'];\n      } else {\n        for (const object in analysis) {\n          // console.log(`score ${type}: ${analysis[object]['score']}`);\n          score += analysis[object]['score'];\n        }\n      }\n      // les analyses de la liste triad donnent directement le score\n    } else if (otherAnalysis.indexOf(type) !== -1) {\n      score = analysis;\n    }\n\n    // let color = this.getColor(this.colors, score);\n    let scoreBar = this.getSidebarNumber(score);\n    this.changeSidebar(type, scoreBar);\n\n    // if (analysis[\"negative\"].length > 0) {\n    //     // this.animateNegativeWords(analysis[\"negative\"]);\n    // }\n  };\n\n  public analyzeText=(sentence: string, language: string = \"en\") => {\n\n    console.log(\"analyzeText function\");\n\n    if (sentence !== undefined) {\n      const polarity = this.textAnalysisService.sentimentAnalysis(sentence, language);\n      // this.showFeedback(polarity, \"polarity\");\n      const selfish = this.textAnalysisService.selfishnessAnalysis(sentence, language);\n      // this.showFeedback(selfish, \"selfishness\");\n\n      console.log(`polarity`, polarity);\n\n      // Analyses en anglais\n      // Pour ces analyses, on traduit en anglais avant d'analyser\n      // D'abord on récupère uniquement les mots entiers\n      const ignoreLastWord = new RegExp(/.+[ !?,.:\"]/, 'gim');\n      // const test = sentence.split(\" \");\n      // console.log(`test: `, test);\n      const allWordsExceptLast = sentence.match(ignoreLastWord); // match renvoie un tableau de correspondances, mais avec la regex il n'est sensé renvoyer qu'un seul tableau\n      // console.log(`allwordsexc`, allWordsExceptLast);\n      const wordsToAnalyze = String(allWordsExceptLast);\n\n      this.tempSentences[1] = wordsToAnalyze;\n\n      // Si ces deux valeurs sont différentes, c'est qu'il y a un mot de plus ou de moins\n      if (this.tempSentences[1] !== this.tempSentences[0]) {\n        this.tempSentences[0] = wordsToAnalyze;\n        console.log(\"wordsToAnalyze\", wordsToAnalyze);\n      }\n    }\n\n  };\n\n  interpretAnalysis = (type: string, analysis: object): object => {\n\n    let analyses = {};\n    let analysesDark = {\n      \"triad\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"narcissism\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"machiavellianism\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"psychopathy\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n    };\n    let analysesBigfive = {\n      \"openness\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"conscientiousness\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"extraversion\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"agreeableness\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n      \"neuroticism\": {\n        \"score\": 0,\n        \"negativeWords\": [],\n        \"positiveWords\": []\n      },\n    };\n\n    if (type === \"darktriad\") {\n      analyses = analysesDark;\n      for (const trait in analysis) {\n        // on vérifie que le tableau contient bien quelque chose\n        if (analysis[trait] !== []) {\n          for (const word in analysis[trait]) {\n            const _word = analysis[trait][word][0]; // correspond au mot (chaine de caractère)\n            // console.log(`_word`, _word, `analysis`, analysis, `trait`, trait);\n            const wordScore = analysis[trait][word][3]; // le quatrième élément correspond à la valeur relative du mot\n            // si le score du mot est positif, ça veut dire que la darktriad est haute, donc c'est plutôt négatif. dans tous les cas on arrondi à 1 pour simplifier\n            if (wordScore > 0) {\n              analyses[trait].score--;\n              analyses[trait].negativeWords.push(_word);\n            } else {\n              analyses[trait].score++;\n              analyses[trait].positiveWords.push(_word);\n            }\n          }\n        }\n      }\n    } else if (type === \"bigfive\") {\n      analyses = analysesBigfive;\n      for (const trait in analysis) {\n        // on regarde si le tableau n'est pas vide\n        if (analysis[trait].matches !== []) {\n          for (let i = 0; i < analysis[trait].matches.length; i++) {\n            const _word = analysis[trait].matches[i][0]; // correspond au mot (chaine de caractère)\n            const wordScore = analysis[trait].matches[i][3]; // le quatrième élément correspond à la valeur relative du mot\n            // si le score du mot est positif, ça veut dire que la darktriad est haute, donc c'est plutôt négatif. dans tous les cas on arrondi à 1 pour simplifier\n            if (wordScore > 0) {\n              analyses[trait].score--;\n              analyses[trait].negativeWords.push(_word);\n            } else {\n              analyses[trait].score++;\n              analyses[trait].positiveWords.push(_word);\n            }\n          }\n        }\n      }\n    }\n\n\n\n    // console.log(`analyses`, analyses);\n\n    // on renvoie la score moyen, ainsi que les mots qui ont influencé globalement le score\n    return analyses;\n  };\n\n  sliceWord(word: string, elmtClass: string): string {\n\n    let tag = `<span class=\"${elmtClass}\">`;\n    for (let letter = 0; letter<word.length; letter++) {\n      tag += `<span>${word[letter]}</span>`; // on ajoute chaque lettre entourée d'un span, comme ça on pourra les animer séparement\n    }\n    tag += `</span>`;\n    return tag;\n  }\n\n  animateNegativeWords= (words: string[]) => {\n    // console.log(`words:`);\n    // console.log(words);\n    const textArea = <HTMLElement>document.querySelector('#smsContent');\n    for (const word in words) {\n      let slicedWord = this.sliceWord(words[word], \"negative\");\n      // console.log(`slicedWord:`);\n      // console.log(slicedWord);\n      // console.log(`textarea.value: ${textArea.textContent}`);\n      const toReplace = new RegExp(`${words[word]}`, 'gi');\n      textArea.innerHTML = (textArea.textContent).replace(toReplace, slicedWord);\n    }\n\n    const wordsToAnimate = document.querySelectorAll(`.negative`);\n    if (wordsToAnimate !== undefined) {\n      for (const singleWord in wordsToAnimate) {\n        let lettersToAnimate = wordsToAnimate[singleWord].querySelectorAll(`span`);\n        for (const letter in lettersToAnimate) {\n          const aLetter = <HTMLElement>lettersToAnimate[letter];\n          const randomValue = Math.floor(Math.random()*3);// on a trois animations différentes\n          aLetter.style.animationName = `marionettes${randomValue}`;\n        }\n      }\n    }\n\n    // pour gérer les balises html dans contenteditable\n    // https://stackoverflow.com/questions/41433796/html-elements-inside-contenteditable\n    // const map = {amp: '&', lt: '<', gt: '>', quot: '\"', '#039': \"'\"}\n    // let html = textArea.innerHTML.replace(/&([^;]+);/g, (m, c) => map[c]);\n    // textArea.innerHTML = html;\n\n    // this.setEndOfContenteditable(textArea); // est sensé ramener le curseur à la fin de la ligne\n\n  };\n\n  setEndOfContenteditable= (contentEditableElement) => {\n    let range,selection;\n    range = document.createRange();//Create a range (a range is a like the selection but invisible)\n    range.selectNodeContents(contentEditableElement);//Select the entire contents of the element with the range\n    range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\n    selection = window.getSelection();//get the selection object (allows you to change selection)\n    selection.removeAllRanges();//remove any selections already made\n    selection.addRange(range);//make the range you have just created the visible selection\n  };\n\n// sendMessage= () => {\n//   const recipientElement = <HTMLInputElement>document.querySelector('#contactNumber');\n//   const recipient = recipientElement.value;\n//   const messageElement = <HTMLElement>document.querySelector('#smsContent');\n//   const message = messageElement.textContent;\n//   let confirmationMessage = document.querySelector('#confirmationMessage');\n//\n//   SMS.sendSMS(recipient, message, () => {\n//     console.log(`sms envoyé! destinaire: ${recipient}; message: ${message}`);\n//     recipientElement.value = \"\";\n//     messageElement.textContent = \"\";\n//     confirmationMessage.textContent = \"Message correctement envoyé :)\";\n//     setTimeout(() => {\n//       confirmationMessage.textContent = \"\";\n//     },3000);\n//\n//     // on remet le listener sur le bouton\n//     const sendButton = <HTMLElement>document.querySelector('#sendMessage');\n//     sendButton.addEventListener('click', this.sendMessage);\n//   }, (err) => {\n//     confirmationMessage.textContent = `Il y a eu une erreur, le message n'est pas parti...\n//           Erreur: ${err}`;\n//     throw err;\n//   });\n//\n// };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/writingAnalysis.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 140;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 140\n// module chunks = 4","var map = {\n\t\"../pages/dashboard/dashboard.module\": [\n\t\t397,\n\t\t3\n\t],\n\t\"../pages/messages/messages.module\": [\n\t\t398,\n\t\t2\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t399,\n\t\t1\n\t],\n\t\"../pages/writing/writing.module\": [\n\t\t400,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 181;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 181\n// module chunks = 4","import { Component } from \"@angular/core\";\nimport { StatsPage } from \"../stats/stats\";\nimport {DashboardPage} from \"../dashboard/dashboard\";\nimport {MessagesPage} from \"../messages/messages\";\nimport {WritingPage} from \"../writing/writing\";\nimport {SettingsPage} from \"../settings/settings\";\n\n\n\n@Component({\n  selector: 'page-tabs',\n  templateUrl: 'tabs.html'\n})\n\nexport class TabsPage {\n  dashboardPage = DashboardPage;\n  messagesPage = MessagesPage;\n  writingPage = WritingPage;\n  statsPage = StatsPage;\n  settingsPage = SettingsPage;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import {Component, OnInit} from '@angular/core';\nimport {NavController, NavParams} from \"ionic-angular\";\nimport { SingleContactStatsPage } from \"./single-contact-stats/single-contact-stats\";\nimport {TextAnalysisService} from \"../../services/textAnalysis.service\";\n\n@Component({\n  selector: 'page-stats',\n  templateUrl: 'stats.html'\n})\nexport class StatsPage implements OnInit {\n\n  contactList = [\n    {\n      name: 'Pauline',\n      description: [\n        '0635527684',\n        'France',\n        'Contacté occasionnellement',\n      ]\n    },\n    {\n      name: 'Maman',\n      description: [\n        '0685947852',\n        'France',\n        'Contacté fréquemment',\n      ]\n    },\n    {\n      name: 'Justine',\n      description: [\n        '0602859632',\n        'Suisse',\n        'Contacté rarement',\n      ]\n    }\n  ];\n\n  constructor(private navCtrl: NavController,\n              private textAnalysisService: TextAnalysisService) // inject the textAnalysis service\n  {\n    let myVar = this.textAnalysisService.selfishnessAnalysis('tu vas bien?');\n    console.log(myVar);\n  }\n\n  onLoadContactStats(contactInfos: {name: string, description: string[]}) {\n    this.navCtrl.push(SingleContactStatsPage, {contactInfos: contactInfos});\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stats/stats.ts","import {Component, OnInit} from '@angular/core';\nimport { NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the SingleContactStatsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-single-contact-stats',\n  templateUrl: 'single-contact-stats.html',\n})\nexport class SingleContactStatsPage implements OnInit {\n\n  contactInfos: {\n    name: string,\n    description: string[]\n  };\n\n  constructor(public navParams: NavParams) {\n  }\n  ngOnInit() {\n    this.contactInfos = this.navParams.get('contactInfos');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stats/single-contact-stats/single-contact-stats.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { StatsPage } from \"../pages/stats/stats\";\nimport { SingleContactStatsPage } from \"../pages/stats/single-contact-stats/single-contact-stats\";\nimport { SettingsPage } from \"../pages/settings/settings\";\nimport { TabsPage } from \"../pages/tabs/tabs\";\nimport {MessagesPage} from \"../pages/messages/messages\";\nimport {WritingPage} from \"../pages/writing/writing\";\nimport {DashboardPage} from \"../pages/dashboard/dashboard\";\n\nimport { TextAnalysisService } from \"../services/textAnalysis.service\";\nimport {WritingAnalysisService} from \"../services/writingAnalysis.service\";\n\n@NgModule({\n  declarations: [\n    MyApp,\n    DashboardPage,\n    MessagesPage,\n    WritingPage,\n    StatsPage,\n    SingleContactStatsPage,\n    SettingsPage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    DashboardPage,\n    MessagesPage,\n    WritingPage,\n    StatsPage,\n    SingleContactStatsPage,\n    SettingsPage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    TextAnalysisService,\n    WritingAnalysisService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 324\n// module chunks = 4","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 326\n// module chunks = 4","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./streams (ignored)\n// module id = 365\n// module chunks = 4","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./extend-node (ignored)\n// module id = 366\n// module chunks = 4","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 368;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/encoding/lib\n// module id = 368\n// module chunks = 4","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from \"../pages/tabs/tabs\";\n// import {StatsPage} from \"../pages/stats/stats\";\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import * as sentiment from \"node-sentiment-jouska\";\nimport * as darktriad from \"darktriad\";\nimport * as bigfive from \"bigfive\";\nimport * as predictgender from \"predictgender\";\nimport * as prospectimo from \"prospectimo\";\nimport * as selfishness from \"selfishness-analysis\";\nimport * as gtranslate from \"translate\";\nimport {Injectable} from \"@angular/core\";\n\nexport class TextAnalysisService {\n\n  constructor() {\n  }\n\n  public static extractClauses(sentence) {\n\n    // on sépare les différentes phrases ou propositions (clauses) du SMS reçu\n    // ça permet d'avoir de bien meilleurs résultats pour l'analyse de sentiment\n    // car dès qu'il y a une négation, la valence de tous les mots est inversée\n    // ---------------\n    // Par exemple :\n    // sentiment(`My husband is not nice, but I still love him`); // -6, because 2 positive words and negation = true\n    // sentiment(`My husband is not nice,`); // -3, because 1 positive word and negation = true\n    // sentiment(`but I still love him`); // 3, because 1 positive word and negation = false\n\n    let sentenceToSlice = sentence;\n    const separators = new RegExp(/[.?!,]\\s| et | and /, 'gim'); // les séparateurs sont la ponctuation basique et le mot et/and\n\n    let array; //  c'est le tableau qui récupère les résultats de la fonction exec\n    let subSentences = []; // on stocke les \"sous-phrases\" là dedans\n    while ((array = separators.exec(sentenceToSlice)) !== null) {\n      const subSentence = sentenceToSlice.slice(0, array.index);\n      subSentences.push(subSentence);\n      sentenceToSlice = sentenceToSlice.replace(subSentence, '');\n    }\n\n    if (subSentences.length > 1) { // si on a trouvé plusieurs propositions, on renvoie le tableau des propositions\n      return subSentences;\n    } else {\n      return sentence; // sinon, on renvoie la phrase originale\n    }\n\n  }\n\n  public updateSentimentAnalysis() {\n    let smsData = JSON.parse(localStorage.getItem('smsData'));\n    for (const contact in smsData) {\n      for (const type in smsData[contact]) { // type = inbox | sent | name\n        if (type !== 'name') { // on ne boucle que dans inbox et sent\n          for (const singleSMS in smsData[contact][type]) {\n            const originalSMS = smsData[contact][type][singleSMS].text.original;\n            smsData[contact][type][singleSMS].analysis.sentimentFr = {};\n            smsData[contact][type][singleSMS].analysis.sentimentFr = this.sentimentAnalysis(originalSMS, 'fr');\n          }\n        }\n      }\n    }\n    console.log(\"anlayse que je refais:\");\n    console.log(smsData);\n  }\n\n  public sentimentAnalysis(textMessage: string, language: string = 'en', originalMessage: string = textMessage): object {\n\n    const message = TextAnalysisService.extractClauses(textMessage);\n\n    if (Array.isArray(message)) { // si c'est un tableau, ça veut dire qu'il y a plusieurs propositions à analyser séparement\n      let analysis = []; // on crée un tableau pour stocker les analyses\n      for (const clause in message) {  // on analyse les propositions une par une et on les ajoute au tableau\n        analysis.push(sentiment(message[clause], language, originalMessage));\n      }\n      return analysis; // on retourne le tableau\n    } else { // si ce n'est pas un tableau, c'est que c'est une phrase seule, donc on peut utiliser la fonction directement\n      return sentiment(message, language, originalMessage);\n    }\n\n\n\n  }\n\n  public darktriadAnalysis(textMessage: string, opts: object = {\"output\": \"matches\"}) {\n    return darktriad(textMessage, opts);\n  }\n\n  public personalityAnalysis(textMessage: string, opts: object = {\"output\": \"matches\"}) {\n    return bigfive(textMessage, opts);\n  }\n\n  public genderPrediction(textMessage: string, language: string = 'en') {\n    return predictgender(textMessage);\n  }\n\n  public temporalOrientationPrediction(textMessage: string, language: string = 'en') {\n    return prospectimo(textMessage);\n  }\n\n  public selfishnessAnalysis(textMessage: string, language: string = 'fr'): object {\n    return selfishness(textMessage, language); // pour l'instant on le fait juste en français\n  }\n\n  translateToEnglish=(sentence: string): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      let text = \"\";\n      gtranslate(sentence, {to: 'en'})\n        .then(translatedText => {\n          // console.log(`translatedText: ${translatedText}`);\n          text = translatedText;\n          if (translatedText.indexOf('&#39;') !== -1) { // il y a un problème d'encodage avec l'apostrophe, donc on remplace les erreurs\n            text = translatedText.replace('&#39;', \"'\");\n          }\n          console.log(`text: ${text}`);\n          resolve(text);\n        }).catch(error => reject(error));\n      // return text;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/textAnalysis.service.ts"],"sourceRoot":""}